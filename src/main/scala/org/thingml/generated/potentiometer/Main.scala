/**
 * File generated by the ThingML IDE
 * /!\Do not edit this file/!\
 * In case of a bug in the generated code,
 * please submit an issue on our GitHub
 **/

package org.thingml.generated.potentiometer
import org.thingml.devices._
import org.sintef.smac._


// Initialize instance variables and states
object Main {

  def main(args: Array[String]): Unit = {
//Connectors
    val null_0 = new Channel
    null_0.start
    val null_1 = new Channel
    null_1.start
    val null_2 = new Channel
    null_2.start
    val null_3 = new Channel
    null_3.start
//Things
    val Potentiometer_ScalaChangingFrequencyLedSimulator_potentiometer = new Potentiometer(BrickSensor_lastValue_var = 0, Brick_device_var = new org.thingml.devices.PotentiometerDemo(0, 1023))
    val SoftTimer_ScalaChangingFrequencyLedSimulator_timer = new SoftTimer(SoftTimer_javaTimer_var = new java.util.Timer(), SoftTimer_lastTask_var = null.asInstanceOf[java.util.TimerTask])
    val Led_ScalaChangingFrequencyLedSimulator_led = new Led(Brick_device_var = new org.thingml.devices.LedDemo)
    val ChangingFrequencyLed_ScalaChangingFrequencyLedSimulator_controller = new ChangingFrequencyLed(ChangingFrequencyLed_frequency_var = 500)
//Bindings
    null_0.connect(
      Potentiometer_ScalaChangingFrequencyLedSimulator_potentiometer.getPort("Sensor").get,
      Potentiometer_ScalaChangingFrequencyLedSimulator_potentiometer.getPort("SensorMockUp").get
    )
    null_0.connect(
      Potentiometer_ScalaChangingFrequencyLedSimulator_potentiometer.getPort("SensorMockUp").get,
      Potentiometer_ScalaChangingFrequencyLedSimulator_potentiometer.getPort("Sensor").get
    )

    null_1.connect(
      ChangingFrequencyLed_ScalaChangingFrequencyLedSimulator_controller.getPort("Timer").get,
      SoftTimer_ScalaChangingFrequencyLedSimulator_timer.getPort("timer").get
    )
    null_1.connect(
      SoftTimer_ScalaChangingFrequencyLedSimulator_timer.getPort("timer").get,
      ChangingFrequencyLed_ScalaChangingFrequencyLedSimulator_controller.getPort("Timer").get
    )

    null_2.connect(
      ChangingFrequencyLed_ScalaChangingFrequencyLedSimulator_controller.getPort("Led").get,
      Led_ScalaChangingFrequencyLedSimulator_led.getPort("Led").get
    )
    null_2.connect(
      Led_ScalaChangingFrequencyLedSimulator_led.getPort("Led").get,
      ChangingFrequencyLed_ScalaChangingFrequencyLedSimulator_controller.getPort("Led").get
    )

    null_3.connect(
      ChangingFrequencyLed_ScalaChangingFrequencyLedSimulator_controller.getPort("Potentiometer").get,
      Potentiometer_ScalaChangingFrequencyLedSimulator_potentiometer.getPort("Potentiometer").get
    )
    null_3.connect(
      Potentiometer_ScalaChangingFrequencyLedSimulator_potentiometer.getPort("Potentiometer").get,
      ChangingFrequencyLed_ScalaChangingFrequencyLedSimulator_controller.getPort("Potentiometer").get
    )

//Starting Things
    Potentiometer_ScalaChangingFrequencyLedSimulator_potentiometer.asInstanceOf[Component].start
    SoftTimer_ScalaChangingFrequencyLedSimulator_timer.asInstanceOf[Component].start
    Led_ScalaChangingFrequencyLedSimulator_led.asInstanceOf[Component].start
    ChangingFrequencyLed_ScalaChangingFrequencyLedSimulator_controller.asInstanceOf[Component].start
  }

}